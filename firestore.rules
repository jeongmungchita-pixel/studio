/**
 * @file Firebase Security Rules for the Korean Gymnastics Federation App.
 *
 * @corePhilosophy This ruleset prioritizes rapid prototyping. All read and write operations are allowed
 * during this phase for authenticated users. All operations are allowed for all users without authentication.
 * Data shape validation is skipped to accelerate development, but authorization checks are in place.
 *
 * @dataStructure
 * - `/users/{userId}`: Stores user profile data, with the `userId` matching the Firebase Auth UID.
 * - `/clubs/{clubId}`: Stores club information.
 * - `/clubs/{clubId}/members/{memberId}`: Stores member information associated with a specific club.
 * - `/competitions/{competitionId}`: Stores competition details.
 * - `/level_tests/{levelTestId}`: Stores level test details.
 *
 * @keySecurityDecisions
 * - No data shape validation is performed in this prototype phase to allow for rapid iteration.
 * - All operations are allowed for all users without authentication.
 * - Read and write access is granted to all authenticated users for all data.
 *
 * @denormalizationForAuthorization Not applicable in this prototype due to open access.
 * @structuralSegregation Not applicable in this prototype due to open access.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages user profile data.
     * @path /users/{userId}
     * @allow (create) User with matching UID can create their profile.
     * @allow (get, list, update, delete) Any user can access.
     * @deny (create) User cannot create a profile with a mismatched UID.
     * @principle Allows any user to perform CRUD operations.
     */
    match /users/{userId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Manages club information.
     * @path /clubs/{clubId}
     * @allow (get, list, create, update, delete) Any user can access.
     * @deny None.
     * @principle Allows any user to perform CRUD operations.
     */
    match /clubs/{clubId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Manages member information within a club.
     * @path /clubs/{clubId}/members/{memberId}
     * @allow (get, list, create, update, delete) Any user can access.
     * @deny None.
     * @principle Allows any user to perform CRUD operations.
     */
    match /clubs/{clubId}/members/{memberId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Manages competition information.
     * @path /competitions/{competitionId}
     * @allow (get, list, create, update, delete) Any user can access.
     * @deny None.
     * @principle Allows any user to perform CRUD operations.
     */
    match /competitions/{competitionId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Manages level test information.
     * @path /level_tests/{levelTestId}
     * @allow (get, list, create, update, delete) Any user can access.
     * @deny None.
     * @principle Allows any user to perform CRUD operations.
     */
    match /level_tests/{levelTestId} {
      allow get, list, create, update, delete: if true;
    }
  }
}